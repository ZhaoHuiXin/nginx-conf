user zhaohuixin staff;
worker_processes  1;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    # /tmp/nginxcache 配置缓存文件存储路径
    # 放在共享内存中，开了一个10m的共享内存，命名为my_cache
    # inactive 不活跃的
    # 所有的参数都在控制缓存
    proxy_cache_path /Users/zhaohuixin/nginx/nginxcache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;


    gzip  on;
    gzip_min_length 1;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/jpg image/gif image/png;
    

    upstream n2_upstream{
        server 127.0.0.1:8080;
    }
    server {
        server_name  huhaha.com;
        listen       80; 
        location / {
            # 因为有了反向代理，我们再去拿一些变量可能出错，比如一个TCP连接是有对端地址的，
            # 有了反向代理后，反向代理与客户端是一个TCP连接，反向代理与上游服务器是另外一条连接
            # 所以如果取原先的变量$remote_addr（TCP连接的远端地址），这时在上游服务器那里取到的是
            # 反向代理服务器的地址；如果想拿浏览器地址，做限制浏览器访问功能的作用时，是拿不到的
            # 通过proxy_set_header可以把一些值添加一条新的header发送到上游，如X-Real-Ip，设置为从TCP连接里拿到的远端IP地址
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 配置缓存
            proxy_cache my_cache;
            # 共享内存中的key，不能重，所以将用户这个变量放在key中，保证唯一性
            proxy_cache_key $host$uri$is_args$args;
            # 对于哪些请求不请求上游服务器，直接返回缓存内容
            proxy_cache_valid 200 304 403 1d;
            proxy_pass http://n2_upstream;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
