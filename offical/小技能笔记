## nginx版本升级
	1、备份老的nginx二进制文件
	2、将新编译的二进制文件替换到当前运行目录（prefix参数要一致）；
	3、给master进程发送热部署信号，做一次版本升级（kill -USR2 	
		oldpid），用最新的二进制文件启动一个进程，老的也在，
		两者进行平滑过渡，老的不监听80和443；
	4、告诉老的worker进程优雅的退出（kill -WINCH oldpid），但是老的master进程还在（版本退回用），
		可以给老的master进程发reload(kill -HUP oldpid)命令，将老的worker进程唤醒，再关闭新版本进程(kill -QUIT newpid)，做版本回退。
	5、关闭老进程kill -QUIT oldpid

## nginx日志切割（把当前日志备份到另外文件，保证nginx正常运行）
	1、首先copy需要备份的日志（改名）；
	2、执行命令 nginx -s reopen。
	可以写成shell脚本，放入contrab定时执行。

## SSL
	SSL(Secure Sockets Layer) 加密套接字协议层； 网景公司 1995年推出
	TLS(Transport Layer Security) 安全传输层协议
	应用层是HTTP协议
	表示层是SSL发挥作用的地方
	TLS_ECDHE(密钥交换)_RSA(身份验证)_WITH_{AES(算法)_128(强度)_GCM(模式)}密码_SHA256(MAC或PRF)

## 对称加密
	共同使用同一密钥进行加密解密，性能好，只要遍历一次就能得到密文

## 非对称加密
	公钥，私钥

## 证书
	CA机构颁发证书；
	我们是证书的订阅人；
	在登记机构通过CSR发送给CA；
	CA通过后生成公私钥，公钥在CA证书链中保存；
	公钥和私钥证书订阅人拿到后，部署到自己的服务器；
	浏览器访问站点时，会请求证书，nginx会把公钥证书发给浏览器；
	浏览器需要验证证书的合法和有效性；
	CA会把过期证书放到CRL服务器，是个链条，查询性能差；
	CA又推出了OCSP响应程序，可以针对单个证书进行有效性验证；
	（nginx有OCSP开关，主动查询证书的有效性，不用等访问来了再查，浏览器可直接从nginx中查证书的有效性）

## 证书类型
	域名验证证书（domain validated, DV），基本实时获取，很多免费
	组织验证证书（organization validated，OV），申请证书时验证填写的机构和组织名称是否正确，需几天
	扩展验证证书（extended validated，EV），更为严格的验证，会在地址栏显示认证时填写的机构名称
	从安全角度讲，以上三者一样，唯一的区别是证书链
	目前所有站点证书都由 根证书、二级证书和主证书构成；
	浏览器除了验证证书是否有效外，还要验证根证书是否有效；
	nginx向浏览器发送证书时发送两个，因为根证书是被操作系统或浏览器内置的，必须发送；
	nginx向浏览器发送主证书，接着发送二级证书，浏览器会自动认证二级证书签发机构的根证书是否有效


## TLS通讯过程





