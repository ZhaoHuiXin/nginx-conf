user  zhaohuixin staff;
worker_processes  1;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    # $remote_addr 远端ip，就是浏览器客户端ip；
    # $time_local 当时时间；
    # $status 返回的是200，还是301重定向，403拒绝访问 等等；
    # main是日志格式的名字。
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" $content_length '
                    '$gzip_ratio ';


    # 是否开启文件压缩                
    gzip  on;
    # 小于1字节的内容就不再执行压缩，减少cpu消耗
    gzip_min_length 1;
    # 压缩级别
    gzip_comp_level 2;
    # 针对某些类型的文件进行压缩，比如zip和tar.gz文件是没有必要再做gzip压缩的
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/jpg image/gif image/png;
    server {
        # 监听端口
        listen       8888; 
        # 域名
        server_name  localhost;
        # 设置日志记录的位置，access_log所在的位置决定了它所属的这样的一类请求，会记录到其后的路径中，采用main这种日志格式
        access_log logs/local-n1.access.log main;
        # 匹配所有请求
        location / {
            # nginx 安装文件中的www目录下后的路径与url路径是一一对应的
            alias   /Users/zhaohuixin/Desktop/xxhd/;
            # index  index.html index.htm;
            # 当我们访问以/结尾的url，显示这个目录的结构
            autoindex on;
            # 公网带宽有限，当许多并发用户使用带宽时，会形成争抢关系，
            # 限制用户访问大文件的访问速度，让用户能访问一些必要的小文件，如css，js）
            # 此时可使用 set 命令配合一些内置变量来实现 ($开头)
            # 如：限制nginx向客户浏览器发送响应的速度，字节/每秒
            # set $limit_rate 1k;


        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
